const heroes = [
    { name: "Luke Skywalker", side: "Lumineux", planet: "Tatooine", species: "Humain", lightsaberColor: "Bleu", masteryOfForce: "Avanc√©" },
    { name: "Darth Vader", side: "Obscur", planet: "Tatooine", species: "Humain", lightsaberColor: "Rouge", masteryOfForce: "Ma√Ætrise totale" },
    { name: "Yoda", side: "Lumineux", planet: "Dagobah", species: "Yoda's Species", lightsaberColor: "Vert", masteryOfForce: "L√©gendaire" },
    { name: "Han Solo", side: "Lumineux", planet: "Corellia", species: "Humain", lightsaberColor: "Aucun", masteryOfForce: "Aucun" },
    { name: "Leia Organa", side: "Lumineux", planet: "Alderaan", species: "Humain", lightsaberColor: "Bleu", masteryOfForce: "D√©butante" },
    { name: "Emperor Palpatine", side: "Obscur", planet: "Naboo", species: "Humain", lightsaberColor: "Rouge", masteryOfForce: "Ma√Ætrise totale" },
    { name: "Chewbacca", side: "Lumineux", planet: "Kashyyyk", species: "Wookiee", lightsaberColor: "Aucun", masteryOfForce: "Aucun" },
    { name: "Obi-Wan Kenobi", side: "Lumineux", planet: "Stewjon", species: "Humain", lightsaberColor: "Bleu", masteryOfForce: "Avanc√©" },
    { name: "R2-D2", side: "Lumineux", planet: "Naboo", species: "Droid", lightsaberColor: "Aucun", masteryOfForce: "Aucun" },
    { name: "C-3PO", side: "Lumineux", planet: "Tatooine", species: "Droid", lightsaberColor: "Aucun", masteryOfForce: "Aucun" }
    ];
    
    
    // find(): renvoie le premier element d'un tableau qui satisfait une fonction
    // findLast():  parcourt le tableau dans l'ordre inverse et renvoie la valeur du premier √©l√©ment satisfaisant une fonction

    // findIndex():  renvoie l'index du premier √©l√©ment d'un tableau satisfaisant la fonction
    // findLastIndex(): parcourt le tableau dans l'ordre inverse et renvoie l'index du premier √©l√©ment satisfaisant la fonction
    // indexOf(): renvoie le premier indice pour lequel on trouve un √©l√©ment donn√© dans un tableau
    // lastIndexOf(): recherche cette cha√Æne et renvoie l'index de la derni√®re occurrence de la sous-cha√Æne sp√©cifi√©e


    // üî• Challenge 1 :
    // üëâ Trouve le premier h√©ros lumineux ayant un sabre laser bleu.
    
const firstLightBlue = heroes.find( hero => hero.side === "Lumineux" && hero.lightsaberColor === "Bleu");
console.log("1- Le premier h√©ros lumineux ayant un sabre laser bleu est :", firstLightBlue.name);

    // ‚ö° Challenge 2 :
    // üëâ Trouve le dernier h√©ros dont le nom contient "Kenobi".
    
const lastKenobi = heroes.findLast(hero => hero.name.includes("Kenobi"));
console.log("2- Le dernier h√©ros dont le nom contient 'Kenobi' est :", lastKenobi.name);

    // üß¨ Challenge 3 :
    // üëâ Trouve l'index du premier h√©ros ayant la ma√Ætrise de la Force "L√©gendaire" et la plan√®te d'origine "Dagobah".
    
const legendeDogobah = heroes.findIndex(hero => hero.planet === "Dagobah" && hero.masteryOfForce === "L√©gendaire");
console.log("3- Le premier h√©ros ayant la ma√Ætrise de la Force 'L√©gendaire' et la plan√®te d'origine 'Dagobah' est situ√© en index n¬∞ :", legendeDogobah);
    
    // ü•ä Challenge 4 :
    // üëâ Trouve l'index du dernier h√©ros dont la plan√®te d'origine est "Tatooine" et qui a un sabre laser rouge.
    
const lastHTatooineRed = heroes.findLastIndex(hero => hero.planet === "Tatooine" &&  hero.lightsaberColor === "Rouge");
console.log("4- Le dernier h√©ros dont la plan√®te d'origine est 'Tatooine' et qui a un sabre laser rouge situ√© en index n¬∞ :", lastHTatooineRed);
   
    // üé≠ Challenge 5 :
    // üëâ Trouve l'index du premier h√©ros dont le nom est "Yoda".
    
const firstHYoda = heroes.findIndex(hero => hero.name === "Yoda");
console.log("5- L'index du premier h√©ros dont le nom est 'Yoda' est :", firstHYoda);

    // üåå Challenge 6 :
    // üëâ Trouve l'index du dernier h√©ros ayant un sabre laser vert.
    
const lastGreen = heroes.findLastIndex(hero => hero.lightsaberColor === "Vert");
console.log("6- L'index du dernier h√©ros ayant un sabre laser vert est :", lastGreen);

    // üí£ Challenge 7 :
    // üëâ Trouve le premier h√©ros non lumineux et de l'esp√®ce "Wookiee".
    
const wookiee = heroes.find(hero => hero.side !== "Obscur" && hero.species === "Wookiee");
console.log("7- Le premier h√©ros non lumineux et de l'esp√®ce 'Wookiee' est :", wookiee.name);

    // üß† Challenge 8 :
    // üëâ Trouve le dernier h√©ros dont le nom contient "Solo" (insensible √† la casse).
    
const lastSolo = heroes.findLast(hero => hero.name.includes("Solo"));
console.log("Le dernier h√©ros dont le nom contient 'Solo' est : ", lastSolo.name.toLowerCase());

    // üß™ Challenge 9 :
    // üëâ Trouve le premier h√©ros dont la ma√Ætrise de la Force est "Aucun".
    
const noForce = heroes.find(hero => hero.masteryOfForce === "Aucun");
console.log("Le premier h√©ros dont la ma√Ætrise de la Force est'Aucun' est : ", noForce.name);

    // üßû‚Äç‚ôÇÔ∏è Challenge 10 :
    // üëâ Trouve le premier h√©ros dont le nom fait plus de 10 caract√®res.

const tenStrings = heroes.find(hero => hero.name.length > 10);
console.log("Le premier hero dont le nom fait plus de 10 caract√®res est:", tenStrings.name);